import turtle
t = turtle.Turtle()

復習1
t.home()
t.clear()

for i in range(4):
 
 t.forward(200)
  
 t.left(90)



print('hello')

復習2
t.home()

t.clear()



for j in range(4):

 for i in range(4):

   t.forward(200)
    
   t.left(90)

   t.left(-90)



print('hello')


146
t.home()

t.clear()


for j in range(2):

  for i in range(4):

    t.forward(100)

    t.left(90)

  
  t.left(90)

  t.forward(120)

  
  for i in range(6):

    t.forward(100)

    t.forward(-100)

    t.left(-90)

    t.forward(20)

    t.left(90)

  
  t.forward(-120)

  t.left(-90)

  t.forward(-240)



print('hello')

t.home()
t.clear()

147

148


151

152

153
def func():
 i=3
 return i

func()
i=3なのでどんなにうっても3

154
def func(v)
  i = v+3
  return i

func(5)

func(15)

func(10)

()内のことを引数という
名前を使って呼び出す

157
def total(n):
 s=0
 for x in range(1,n+1):
   s += x
   return s

total(100)

total(10)

total(1000)

#def rect(x, y, a):

  t.up()
  t.home()

  t.forward(x)

  t.left(90)

  t.forward(y)

  t.down()

  for i in range(4):

    t.forward(a)

    t.left(-90)


正方形を書く

#def yline(x, y, a):

  t.up()

  t.home()

  t.forward(x)

  t.left(90)

  t.forward(y)

  t.down()

  t.forward(a)

直線を書く

#t.clear()
rect(110,-110,100)
rect(110,0,100)
rect(0,-110,100)
rect(0,0,100)

先週の正方形

t.home()
t.clear()


158
import turtle
turtle = turtle.Turtle()

def center_circle():
 turtle.penup()
 turtle.forward(200)
 turtle.left(90)
 turtle.pendown()
 turtle.circle(200)
 turtle.left(90)
 turtle.penup()
 turtle.forward(200)
 turtle.pendown()

160
def.circle(x,y,r):
 t.up()
 t.home()
 t.forward(x)
 t.left(90)
 t.forward(y)
 
t.clear()
circle(100,100,50)

161
def rect(x, y, a):

  t.up()

  t.home()

  t.forward(x)

  t.left(90)

  t.forward(y)

  t.down()

  for i in range(4):

    t.forward(a)

    t.left(-90)


def yline(x, y, a):

  t.up()

  t.home()

  t.forward(x)

  t.left(90)

  t.forward(y)

  t.down()

  t.forward(a)

